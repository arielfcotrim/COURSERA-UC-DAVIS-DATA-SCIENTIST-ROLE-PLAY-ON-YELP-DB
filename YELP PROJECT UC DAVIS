Data Scientist Role Play: Profiling and Analyzing the Yelp Dataset Coursera Worksheet

This is a 2-part assignment. In the first part, you are asked a series of questions that will help you profile and understand the data just like a data scientist would. For this first part of the assignment, you will be assessed both on the correctness of your findings, as well as the code you used to arrive at your answer. You will be graded on how easy your code is to read, so remember to use proper formatting and comments where necessary.

In the second part of the assignment, you are asked to come up with your own inferences and analysis of the data for a particular research question you want to answer. You will be required to prepare the dataset for the analysis you choose to do. As with the first part, you will be graded, in part, on how easy your code is to read, so use proper formatting and comments to illustrate and communicate your intent as required.

For both parts of this assignment, use this "worksheet." It provides all the questions you are being asked, and your job will be to transfer your answers and SQL coding where indicated into this worksheet so that your peers can review your work. You should be able to use any Text Editor (Windows Notepad, Apple TextEdit, Notepad ++, Sublime Text, etc.) to copy and paste your answers. If you are going to use Word or some other page layout application, just be careful to make sure your answers and code are lined appropriately.
In this case, you may want to save as a PDF to ensure your formatting remains intact for you reviewer.



Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:
	
i. Attribute table = 10000
ii. Business table = 10000
iii. Category table = 10000
iv. Checkin table = 10000
v. elite_years table = 10000
vi. friend table = 10000
vii. hours table = 10000
viii. photo table = 10000
ix. review table = 10000
x. tip table = 10000
xi. user table = 10000
	


2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.

i. 	    Business =			10000 	(id)
ii. 	Hours =				1562 	(business_id)
iii. 	Category =			2643    (business_id)
iv. 	Attribute =			1115	(business_id)
v. 	    Review =			10000	(id),			8090 (business_id), 	9581 (user_id)
vi. 	Checkin = 			493 	(business_id)
vii. 	Photo =				10000	(id),			6493 (business_id)
viii. 	Tip = 				537		(user_id),      3979 (business_id)
ix. 	User = 				10000	(id)
x. 	    Friend = 			11		(user_id)
xi. 	Elite_years =	    2780	(user_id)

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.	



3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer:
	No.
	
	SQL code used to arrive at answer:
	
	SELECT	COUNT *
	FROM	User
	WHERE	Id IS NULL
		OR	name IS NULL
		OR	review_count IS NULL
		OR	yelping_since IS NULL
		OR	useful IS NULL
		OR 	funny IS NULL
		OR	cool IS NULL
		OR 	fans IS NULL
		OR 	average_stars IS NULL
		OR 	compliment_hot IS NULL
		OR  compliment_more IS NULL
		OR 	compliment_profile IS NULL
		OR 	compliment_cute IS NULL
		OR 	compliment_list IS NULL
		OR 	compliment_note IS NULL
		OR 	compliment_plain IS NULL
		OR 	compliment_cool IS NULL
		OR 	compliment_funny IS NULL
		OR 	compliment_writer IS NULL
		OR 	compliment_photos IS NULL
	

	
4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

	i. Table: Review, Column: Stars
	
		min:	1	max:	5	avg:	3.7082
		
	
	ii. Table: Business, Column: Stars
	
		min:	1.0		max:	5.0		avg:  3.6549 
		
	
	iii. Table: Tip, Column: Likes
	
		min:	0	max:	2	avg:	0.0144
		
	
	iv. Table: Checkin, Column: Count
	
		min:	1	max:	53	avg:  1.9414
		
	
	v. Table: User, Column: Review_count
	
		min:	0	max:	2000	avg:  24.2995
		


5. List the cities with the most reviews in descending order:

	SQL code used to arrive at answer:

SELECT      city
          , SUM(review_count) as Reviews
FROM        business
GROUP BY    city
ORDER BY    SUM(review_count) DESC


	
	Copy and Paste the Result Below:
+-----------------+---------+
| city            | Reviews |
+-----------------+---------+
| Las Vegas       |   82854 |
| Phoenix         |   34503 |
| Toronto         |   24113 |
| Scottsdale      |   20614 |
| Charlotte       |   12523 |
| Henderson       |   10871 |
| Tempe           |   10504 |
| Pittsburgh      |    9798 |
| Montréal        |    9448 |
| Chandler        |    8112 |
| Mesa            |    6875 |
| Gilbert         |    6380 |
| Cleveland       |    5593 |
| Madison         |    5265 |
| Glendale        |    4406 |
| Mississauga     |    3814 |
| Edinburgh       |    2792 |
| Peoria          |    2624 |
| North Las Vegas |    2438 |
| Markham         |    2352 |
| Champaign       |    2029 |
| Stuttgart       |    1849 |
| Surprise        |    1520 |
| Lakewood        |    1465 |
| Goodyear        |    1155 |
+-----------------+---------+
(Output limit exceeded, 25 of 362 total rows shown)

	
6. Find the distribution of star ratings to the business in the following cities:

i. Avon

SQL code used to arrive at answer:

SELECT  stars
      , COUNT(stars)
FROM    business
WHERE   city = 'Avon'

GROUP BY
        stars


Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):
+-------+--------------+
| stars | COUNT(stars) |
+-------+--------------+
|   1.5 |            1 |
|   2.5 |            2 |
|   3.5 |            3 |
|   4.0 |            2 |
|   4.5 |            1 |
|   5.0 |            1 |
+-------+--------------+



ii. Beachwood

SQL code used to arrive at answer:

SELECT  stars
      , COUNT(stars)
FROM    business
WHERE   city = 'Beachwood'

GROUP BY
        stars


Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):

+-------+--------------+
| stars | COUNT(stars) |
+-------+--------------+
|   2.0 |            1 |
|   2.5 |            1 |
|   3.0 |            2 |
|   3.5 |            2 |
|   4.0 |            1 |
|   4.5 |            2 |
|   5.0 |            5 |
+-------+--------------+
		


7. Find the top 3 users based on their total number of reviews:
		
	SQL code used to arrive at answer:
	
SELECT      [name]
          , review_count   
FROM        [user]
ORDER BY    review_count DESC
LIMIT       3
	
		
	Copy and Paste the Result Below:

+--------+--------------+
| name   | review_count |
+--------+--------------+
| Gerald |         2000 |
| Sara   |         1629 |
| Yuri   |         1339 |
+--------+--------------+
	
	
	
Also, you may refer to the following entity relationship (ER) diagram:
	
8. Does posing more reviews correlate with more fans?
														NO.

	Please explain your findings and interpretation of the results:
query:
SELECT  id
      , [name]
      , review_count
      , fans
FROM   [user]
wHERE   review_count >= 1000
ORDER BY
        review_count DESC

+------------------------+---------+--------------+------+
| id                     | name    | review_count | fans |
+------------------------+---------+--------------+------+
| -G7Zkl1wIWBBmD0KRy_sCw | Gerald  |         2000 |  253 |
| -3s52C4zL_DHRK0ULG6qtg | Sara    |         1629 |   50 |
| -8lbUNlXVSoXqaRRiHiSNg | Yuri    |         1339 |   76 |
| -K2Tcgh2EKX6e6HqqIrBIQ | .Hon    |         1246 |  101 |
| -FZBTkAZEXoP7CYvRV2ZwQ | William |         1215 |  126 |
| --2vR0DIsmQ6WfcSzKWigw | Harald  |         1153 |  311 |
| -gokwePdbXjfS0iF7NsUGA | eric    |         1116 |   16 |
| -DFCC64NXgqrxlO8aLU5rg | Roanna  |         1039 |  104 |
+------------------------+---------+--------------+------+
		
		
From the table below, let's compare Gerald and Harald.
Gerald has 2000 reviews and 253 fans; Harald has 1153 reviews and 311 fans. That means Harald has 58 more fans than Gerald, despite having 847 less reviews.
Sara and Yuri have 1629 and 1339 reviews. Compare to .Hon and William who have 1246 and 1215 reviews. Hon and William have more fans.
That is not to say that having less reviews means having more fans. As exemplified by comparing Gerald (2000 reviews, 253 fans) to eric who has less reviews (1116) AND ALSO less fans (16).


	
9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer: love

	
	SQL code used to arrive at answer:

SELECT      'love' Word
           , COUNT([text]) AS [Total Count]
FROM        review
WHERE       [text] LIKE '%love%'
	 
      UNION

SELECT      'hate' Word
          ,  COUNT([text]) AS [Total Count]
FROM         review
WHERE       [text] LIKE '%hate%'

+------+-------------+
| Word | Total Count |
+------+-------------+
| hate |         232 |
| love |        1780 |
+------+-------------+

	
	
10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:
SELECT  id
      , [name]
      , fans
FROM   [user]
ORDER BY
        fans DESC
LIMIT	10
	
	Copy and Paste the Result Below:
+------------------------+-----------+------+
| id                     | name      | fans |
+------------------------+-----------+------+
| -9I98YbNQnLdAmcYfb324Q | Amy       |  503 |
| -8EnCioUmDygAbsYZmTeRQ | Mimi      |  497 |
| --2vR0DIsmQ6WfcSzKWigw | Harald    |  311 |
| -G7Zkl1wIWBBmD0KRy_sCw | Gerald    |  253 |
| -0IiMAZI2SsQ7VmyzJjokQ | Christine |  173 |
| -g3XIcCb2b-BD0QBCcq2Sw | Lisa      |  159 |
| -9bbDysuiWeo2VShFJJtcw | Cat       |  133 |
| -FZBTkAZEXoP7CYvRV2ZwQ | William   |  126 |
| -9da1xk7zgnnfO1uTVYGkA | Fran      |  124 |
| -lh59ko3dxChBSZ9U7LfUw | Lissa     |  120 |
+------------------------+-----------+------+

		

Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating.
Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.
	
i. Do the two groups you chose to analyze have a different distribution of hours?

They do not have the exact same distribution of hours, although it is almost identical.
There is a difference of 1 hour in the opening hour (99 cent sushi opens an hour earlier).

SELECT      c.category
          , b.[name]
          , b.city
          , h.[hours]
          , b.stars
		  , b.review_count
FROM        business AS b INNER JOIN category AS c
      ON    b.id = c.business_id
                          INNER JOIN [hours] AS h
      ON    h.business_id = c.business_id
WHERE       b.[name] = 'Flaming Kitchen'
   OR       b.[name] = '99 Cent Sushi'
GROUP BY    h.[hours]
          , b.stars
ORDER BY    h.[hours] ASC

+-------------+-----------------+---------+-----------------------+-------+
| category    | name            | city    | hours                 | stars |
+-------------+-----------------+---------+-----------------------+-------+
| Restaurants | 99 Cent Sushi   | Toronto | Friday|11:00-23:00    |   2.0 |
| Restaurants | Flaming Kitchen | Markham | Friday|12:00-23:00    |   3.0 |
| Restaurants | 99 Cent Sushi   | Toronto | Monday|11:00-23:00    |   2.0 |
| Restaurants | Flaming Kitchen | Markham | Monday|12:00-23:00    |   3.0 |
| Restaurants | 99 Cent Sushi   | Toronto | Saturday|11:00-23:00  |   2.0 |
| Restaurants | Flaming Kitchen | Markham | Saturday|12:00-23:00  |   3.0 |
| Restaurants | 99 Cent Sushi   | Toronto | Sunday|11:00-23:00    |   2.0 |
| Restaurants | Flaming Kitchen | Markham | Sunday|12:00-23:00    |   3.0 |
| Restaurants | 99 Cent Sushi   | Toronto | Thursday|11:00-23:00  |   2.0 |
| Restaurants | Flaming Kitchen | Markham | Thursday|12:00-23:00  |   3.0 |
| Restaurants | 99 Cent Sushi   | Toronto | Tuesday|11:00-23:00   |   2.0 |
| Restaurants | Flaming Kitchen | Markham | Tuesday|12:00-23:00   |   3.0 |
| Restaurants | 99 Cent Sushi   | Toronto | Wednesday|11:00-23:00 |   2.0 |
| Restaurants | Flaming Kitchen | Markham | Wednesday|12:00-23:00 |   3.0 |
+-------------+-----------------+---------+-----------------------+-------+


ii. Do the two groups you chose to analyze have a different number of reviews?

Yes, they do. "Flaming Kitchen" has 5 times as many reviews as "99 Cent Sushi".


SELECT      c.category
          , b.[name]
          , b.city
          , h.[hours]
          , b.stars
          , b.review_count
FROM        business AS b INNER JOIN category AS c
      ON    b.id = c.business_id
                          INNER JOIN [hours] AS h
      ON    h.business_id = c.business_id
WHERE       b.[name] = 'Flaming Kitchen'
   OR       b.[name] = '99 Cent Sushi'
GROUP BY    b.stars

+-------------+-----------------+---------+----------------------+-------+--------------+
| category    | name            | city    | hours                | stars | review_count |
+-------------+-----------------+---------+----------------------+-------+--------------+
| Restaurants | 99 Cent Sushi   | Toronto | Saturday|11:00-23:00 |   2.0 |            5 |
| Restaurants | Flaming Kitchen | Markham | Saturday|12:00-23:00 |   3.0 |           25 |
+-------------+-----------------+---------+----------------------+-------+--------------+
         
         
iii. Are you able to infer anything from the location data provided between these two groups? Explain.

Although there is a museum and a lake and many other tourist attractions in Downtown Core, where '99 Cent Sushi' is located,
which could potentially mean a large and constant flow of customers... in Brown's Corner there is actually a commercial center
with a lot of restaurants. That means that, more likely than not, large droves of people travel there constantly and consistently
to eat out. That could explain mainly why 'Flaming Kitchen' has received 5 times as many reviews as '99 Cent Sushi'.

Moreover, it could also explain why it gets higher star ratings than '99 Cent Sushi'. If people are coming out to eat instead of just
happening to stop by your restaurant, then one might expect they would have a warmer attitude towards the restuarant they are going to.
That would be, in part, because are going out and want to have fun - the full experience. In contrast to just grabbing something
random to eat on the street when they are focused on other things like the museum or that they are late to work etc.


SQL code used for analysis:

SELECT      c.category
          , b.[name]
          , b.neighborhood
          , b.city
          , b.[state]
          , b.stars
          , b.review_count
FROM        business AS b INNER JOIN category AS c
      ON    b.id = c.business_id
                          INNER JOIN [hours] AS h
      ON    h.business_id = c.business_id
WHERE       b.[name] = 'Flaming Kitchen'
   OR       b.[name] = '99 Cent Sushi'
GROUP BY    b.stars

+-------------+-----------------+-----------------+---------+-------+-------+--------------+
| category    | name            | neighborhood    | city    | state | stars | review_count |
+-------------+-----------------+-----------------+---------+-------+-------+--------------+
| Restaurants | 99 Cent Sushi   | Downtown Core   | Toronto | ON    |   2.0 |            5 |
| Restaurants | Flaming Kitchen | Brown's Corners | Markham | ON    |   3.0 |           25 |
+-------------+-----------------+-----------------+---------+-------+-------+--------------+
		
		
2. Group business based on the ones that are open and the ones that are closed.
What differences can you find between the ones that are still open and the ones that are closed?
List at least two differences and the SQL code you used to arrive at your answer.
		
i. Difference 1:
					Open businesses have a higher averaga rating than closed businesses.

SELECT     [name]
          , AVG(stars) AS 'AvgStarsOpen'
          , AVG(stars) AS 'AvgStarsClosed'
          , is_open
FROM        business
WHERE       is_open = 1
OR          is_open = 0
GROUP BY    is_open

+----------------------------+------------------+--------------------+---------+
| name                       | AverageStarsOpen | AverageStarsClosed | is_open |
+----------------------------+------------------+--------------------+---------+
| Eki-Bento Japanese Express |    3.52039473684 |      3.52039473684 |       0 |
| Scott Roofing Company      |    3.67900943396 |      3.67900943396 |       1 |
+----------------------------+------------------+--------------------+---------+
         
ii. Difference 2:
					There are more open businesses than closed ones.
         
         
SQL code used for analysis:
SELECT     [name]
            is_open
          , COUNT	  (is_open) AS 'CountClosed'
          ,(SELECT     COUNT(is_open)
            FROM       business
            WHERE      is_open = 1) AS 'CountOpen'
FROM        business
WHERE       is_open = 0

+----------------------------+-------------+-----------+
| is_open                    | CountClosed | CountOpen |
+----------------------------+-------------+-----------+
| Eki-Bento Japanese Express |        1520 |      8480 |
+----------------------------+-------------+-----------+


	
	
3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.

Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, clustering businesses to find commonalities or anomalies between them,
predicting the overall star rating for a business, predicting the number of fans a user will have, and so on. These are just a few examples to get you started,
so feel free to be creative and come up with your own problem you want to solve. Provide answers, in-line, to all of the following:
	
i. Indicate the type of analysis you chose to do:

Analyse the best location/area to open a restaurant specializing in meats.

         
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:

I will need filter all the businesses that are open and their categories and analyse which ones deal with meats as their specialty.
Then, I will need to filter to keep just those in my output. I would also want to look at attributes just in case
above information does not paint a clear enough image of the data I'm trying to collect.

I will then need to filter for neighborhood, city and state.
Furthermore, I will need to filter their week and weekend opening hours. If there is a trend where there is one day
in particular where opening hours are suddenly different for some reason, then that also needs to be accounted for and analysed
in my data. To finish, I will need to look at the ratings and number of reviews for each area/neighborhood/city/state.

                           
                  
iii. Output of your finished dataset:
+-------------+--------------------------+-----------------+---------+-------+-------+------------+---------------------+
| category    | attribute                | neighborhood    | city    | state | stars | NofReviews | hours               |
+-------------+--------------------------+-----------------+---------+-------+-------+------------+---------------------+
| Restaurants | RestaurantsTableService  | Brown's Corners | Markham | ON    |   3.0 |         25 | Monday|12:00-23:00  |
| Restaurants | GoodForMeal              | Brown's Corners | Markham | ON    |   3.0 |         25 | Monday|12:00-23:00  |
| Restaurants | Alcohol                  | Brown's Corners | Markham | ON    |   3.0 |         25 | Monday|12:00-23:00  |
| Restaurants | Caters                   | Brown's Corners | Markham | ON    |   3.0 |         25 | Monday|12:00-23:00  |
| Restaurants | HasTV                    | Brown's Corners | Markham | ON    |   3.0 |         25 | Monday|12:00-23:00  |
| Restaurants | RestaurantsGoodForGroups | Brown's Corners | Markham | ON    |   3.0 |         25 | Monday|12:00-23:00  |
| Restaurants | NoiseLevel               | Brown's Corners | Markham | ON    |   3.0 |         25 | Monday|12:00-23:00  |
| Restaurants | WiFi                     | Brown's Corners | Markham | ON    |   3.0 |         25 | Monday|12:00-23:00  |
| Restaurants | RestaurantsAttire        | Brown's Corners | Markham | ON    |   3.0 |         25 | Monday|12:00-23:00  |
| Restaurants | RestaurantsReservations  | Brown's Corners | Markham | ON    |   3.0 |         25 | Monday|12:00-23:00  |
| Restaurants | OutdoorSeating           | Brown's Corners | Markham | ON    |   3.0 |         25 | Monday|12:00-23:00  |
| Restaurants | RestaurantsPriceRange2   | Brown's Corners | Markham | ON    |   3.0 |         25 | Monday|12:00-23:00  |
| Restaurants | BikeParking              | Brown's Corners | Markham | ON    |   3.0 |         25 | Monday|12:00-23:00  |
| Restaurants | RestaurantsDelivery      | Brown's Corners | Markham | ON    |   3.0 |         25 | Monday|12:00-23:00  |
| Restaurants | Ambience                 | Brown's Corners | Markham | ON    |   3.0 |         25 | Monday|12:00-23:00  |
| Restaurants | RestaurantsTakeOut       | Brown's Corners | Markham | ON    |   3.0 |         25 | Monday|12:00-23:00  |
| Restaurants | GoodForKids              | Brown's Corners | Markham | ON    |   3.0 |         25 | Monday|12:00-23:00  |
| Restaurants | BusinessParking          | Brown's Corners | Markham | ON    |   3.0 |         25 | Monday|12:00-23:00  |
| Restaurants | RestaurantsTableService  | Brown's Corners | Markham | ON    |   3.0 |         25 | Tuesday|12:00-23:00 |
| Restaurants | GoodForMeal              | Brown's Corners | Markham | ON    |   3.0 |         25 | Tuesday|12:00-23:00 |
| Restaurants | Alcohol                  | Brown's Corners | Markham | ON    |   3.0 |         25 | Tuesday|12:00-23:00 |
| Restaurants | Caters                   | Brown's Corners | Markham | ON    |   3.0 |         25 | Tuesday|12:00-23:00 |
| Restaurants | HasTV                    | Brown's Corners | Markham | ON    |   3.0 |         25 | Tuesday|12:00-23:00 |
| Restaurants | RestaurantsGoodForGroups | Brown's Corners | Markham | ON    |   3.0 |         25 | Tuesday|12:00-23:00 |
| Restaurants | NoiseLevel               | Brown's Corners | Markham | ON    |   3.0 |         25 | Tuesday|12:00-23:00 |
+-------------+--------------------------+-----------------+---------+-------+-------+------------+---------------------+         
         
iv. Provide the SQL code you used to create your final dataset:

SELECT      category
          , a.[name] AS 'attribute'
          , b.neighborhood
          , b.city
          , b.[state]
          , b.stars
          , b.review_count AS NofReviews
          , h.[hours]
		  
FROM        business AS b INNER JOIN [hours] AS h
      ON b.id = h.business_id
                          INNER JOIN category AS c
      ON b.id = c.business_id
                          INNER JOIN attribute AS a
      ON b.id = a.business_id
WHERE       is_open = 1
      AND   category LIKE '%food%'
      OR    category LIKE '%restaurant%'
      AND   category <> 'Restaurant Supplies'